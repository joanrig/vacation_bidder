<%= render '/layouts/vacations' %>
<br>
<br>
<br>
<br>
<br>
<div class="center", style="text-align:center">
  <div class="container panel-a panel-body">
    <div class="col-sm-12 d-flex flex-row">
      <br>
      <hr> 
      <h3>Javascript button</h3>
      <button id="vacations-data">My Vacations</button>
      <div id="ajax-vacations">
      </div>
      <hr>


      <h1> My Vacations </h1>
      <br>
      <br>
      <% if @vacations.empty? %>
        <h3>No Vacations yet! Let's build one!</h3>
      <% else %>
        <% @vacations.uniq.sort.each do |v| %>
          <h3><%= link_to v.name, vacation_path(v) %></h3>
        <% end %>
      <% end %>
      <br>
      <br>


      <h4>
        <div style="color:black">
        <%= link_to "New Vacation", bucket_list_items_path %>
        </div>
      </h4>

      <h4>Javascript new vacation form </h4>
      <div id="new-vacation-form-div">
      </div>



    </div>
  </div>
</div>

<script>
$(function() {
    console.log('vacations.js is loaded ...')
    listenForClick()
})

function listenForClick() {
    $('button#vacations-data').one('click', function(event) {
        event.preventDefault()
        getVacations()

    })
}

function getVacations() {
	$.ajax({
		url: 'http://localhost:3000/vacations',
		method: 'get',
		dataType: 'json',
		success: function (data) {
			console.log(data)
			data.map(vacation => {
				const newVacation = new Vacation(vacation)
				const newVacationHtml = newVacation.vacationHTML()
      
				document.getElementById('ajax-vacations').innerHTML += newVacationHtml
        listenForHover()
			})
		}
	})
}

function listenFornewVacationFormClick() {
	$('button#ajax-new-vacation').on('click', function (event) {
		event.preventDefault()
		let newVacationForm = Vacation.newVacationForm()
		// $('div#new-vacation-form-div')
		document.querySelector('div#new-vacation-form-div').innerHTML = newVacationForm
    
	})
}

const allVacations = []

class Vacation {
    constructor(obj) {
        this.id = obj.id
        this.name = obj.name
        this.category = obj.category
        this.budget = obj.budget
        this.number_of_travelers = obj.number_of_travelers
        this.notes = obj.notes
        this.open_to_bids = obj.open_to_bids
        this.bucket_list_item_id = obj.bucket_list_item_id
        this.attractions = obj.attractions
        allVacations << this
    }

	static newVacationForm() {
		return (`
		<strong>New vacation form</strong>
			<form>
				<input id='vacation-name' type='text' name='name'></input><br>

        <input type='text' name='budget'></input><br>
        <input type='text' name='number_of_travelers'></input><br>
        <input type='text' name='notes'></input><br>    
				<input type='submit' />
			</form>
		`)
	}
}

Vacation.prototype.vacationHTML = function() {
	return (`	
		<div class='vacation-js' id="${this.id}">
      <h3>${this.name}</h3>
		</div>
	`)
  
}

function listenForHover() {
    $('div.vacation-js').(mouseenter, mouseout) (function(event) {
        // let id = event.target.parentElement.id     
      event.preventDefault()
        

    })
}

</script>
